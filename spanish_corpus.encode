#!/usr/bin/env python3
import click
import subprocess
import os
from os import path
import functools as ft
import logging

log = logging.getLogger(__name__)
log.setLevel(logging.DEBUG)
log.addHandler(logging.StreamHandler())
run = ft.partial(subprocess.run, shell=True)

ZIPFILE = 'spanish_corpus.zip'
UNZIPPED_DIR = 'spanish_corpus.unzipped/'
ENCODED_DIR = 'spanish_corpus.encoded/'
NEW_ZIPFILE = 'spanish_corpus.utf8.zip'


@click.group()
def cli():
    pass


@cli.command()
def make():
    log.info('Please download the samples from the following link and put them in this directory')
    log.info(' -> https://www.kaggle.com/rtatman/120-million-word-spanish-corpus#spanish_corpus.zip')
    
    if not click.confirm('Did you download the samples?'):
        log.info('Come back later then')
        exit()

    log.info('Unzipping')
    os.mkdir(UNZIPPED_DIR)
    run('unzip {} -d {}'.format(ZIPFILE, UNZIPPED_DIR))

    log.info('Encoding in UTF-8')
    os.mkdir(ENCODED_DIR)
    for f in os.listdir(UNZIPPED_DIR):
        log.info('Encoding {}'.format(f))
        run('cat "spanish_corpus.unzipped/{}" | iconv -f ISO-8859-1 -t UTF-8 > "./spanish_corpus.encoded/{}"'.format(f, f))

    log.info('Fixing text')
    for f in os.listdir(ENCODED_DIR):
        f = path.join(ENCODED_DIR, f)
        log.info('Fixing {}'.format(f))
        with open(f, 'r') as stream:
            text = stream.readlines()
        with open(f, 'w') as stream:
            stream.writelines(fix_text(text))

    log.info('Saving everything to {}'.format(NEW_ZIPFILE))
    run('cd {}; zip -r ../{} .'.format(ENCODED_DIR, NEW_ZIPFILE))

    log.info('Done')


def fix_text(text):
    skiplines = 1
    for line in text:
        if skiplines > 0:
            skiplines -= 1
            yield line
            continue
        if line == 'ENDOFARTICLE.\n':
            skiplines = 2
            yield line
            continue
        yield fix_line(line)


def fix_line(line):
    line = line.replace('<', 'menor que')
    line = line.replace('>', 'mayor que')
    line = line.replace('&', 'and')
    return line
        

@cli.command()
def clean():
    for f in os.listdir(UNZIPPED_DIR):
        log.info('Removing {}'.format(f))
        os.remove(path.join(UNZIPPED_DIR, f))

    log.info('Removing dir {}'.format(UNZIPPED_DIR))
    os.rmdir(UNZIPPED_DIR)

    for f in os.listdir(ENCODED_DIR):
        log.info('Removing {}'.format(f))
        os.remove(path.join(ENCODED_DIR, f))

    log.info('Removing dir {}'.format(ENCODED_DIR))
    os.rmdir(ENCODED_DIR)

    log.info('Removing {}'.format(NEW_ZIPFILE))
    os.remove(NEW_ZIPFILE)

if __name__ == '__main__':
    cli()

